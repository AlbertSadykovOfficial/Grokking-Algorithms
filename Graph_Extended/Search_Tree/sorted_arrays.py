"""

		Отсортированные массивы (как деревья поиска)
			
			Дерево поиска имеют те же операции, что и отсортированные массивы, но 
			так же способны производить быстры перации вставки и удаления.

-------------------------------------------------------------------------------------
			КОГДА ИСПОЛЬЗОВАТЬ:
				Если приложение нуждается в упорядоченном, 
				но НЕдинамичном множестве (const).
-------------------------------------------------------------------------------------

			Поддерживанемы ОПЕРАЦИИ:
				1) Отыскать 
				2) Минимум 
				3) Предшественник (или Приемник) 
				4) Вывести в отсортированном порядке
				5) Выбрать
				6) Взять ранг 

				______________________________________
				| Операция				| Время выполнения	|
				|-------------------------------------|
				| Отыскать				|			O(log(n))			|
				| Выбрать					|				O(1)				|
				| Найти min	(max)	|				O(1)				|
				| Предшественник	|			O(log(n))			|
				| Взять ранг			|			O(log(n))			|
				| Вывести в отсорт|				O(n)				|
				|_____________________________________|

				ОТЫСКАТЬ:
				(1)Двоичный поиск: взять эл-т из центра (mid), если это наш элемент (x),
					то ок, не наш, проверяем: x < mid или x > mid:
					
						Если x > mid, то выполнить рекурсию (1) в ЛЕВОЙ части, 
						Если x < mid, то выполнить рекурсию (1) в ПРАВОЙ части,

				МИНИМУМ И МАКСИМУМ:
					Время O(1), т.к надо просто вернуть указатель на первый или на последний объект.

				ПРЕДШЕСТВЕННИК ИЛИ ПРИЕМНИК:
					Следует применить команду ОТЫСКАТЬ, которая найдет позицию элемента X, O(log(n))
					затем вернуть предыдущий или следующий элемент (O(1))
					Итог: O(log(n))

				ВЫВЕСТИ В ОТСОРТИРОВАННОМ ПОРЯДКЕ:
					Т.е пройтись от начала в конец или наоборот n раз: O(n)

				ВЫБРАТЬ:
					Выборка объекта по заданному i требует постоянного времени O(i)

				ВЗЯТЬ РАНГ:
					Если бин. поиск находит объект с ключом k в i-й позиции массива,
					либо если он обнаруживает, что k находится между ключами в i-й и
					i+1 позиции, то правильным ответом будет i.
					Время: O( log(n) )

			НЕПОДДЕРЖИВАЕМЫЕ ОПЕРАЦИИ
				Многие приложения динамичны, поэтому наряду с представленными функциями
				часто нужны функции вставки и удаления которых нет в МАССИВАХ.

				Чтобы реализовать операции УДАЛИТЬ и ВСТАВИТЬ, то потребуется линейное время
				O(n).

				Чтобы иметь все преимущества отсортированных массивов, а так же осуществлять
				операции ВСТАВКИ и УДАЕНИЯ, была создана структура данных - ДЕРЕВЬЯ ПОИСКА. 


"""