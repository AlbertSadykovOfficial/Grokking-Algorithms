"""
			Коллизии:

				Коллизия - ситуация, когда 2 и более ключа хэшируются в 1 позицию (Алиса и Боб отображаются на 17).
				
				Коллизии можно обойти, используя следующие методы:
						1) Сцепление
						2) Открытая адресация

				Разрешение коллизий - сцепление

						1) Хранить связый сисок в каждой корзине хэш-таблицы
						2) Для ПРОСМОТРА/ВСТАВКИ/УДАЛЕНИЯ объекта с ключом k, 
							 выполняются операции ПРОСМОТРА/ВСТАВКИ/УДАЛЕНИЯ на связном списке в корзине [A[h(k)]],
							 где h - хэш-функция, A - массив хэш-таблицы.

						Для предотвращения коллизии при отображении на одну и ту же позицию используют сцепление
						с позицией связного списка, такое сцепление назвается КОРЗИНОЙ.

						Операция ВСТАВИТЬ занимает постоянное время, вставляя новый объект в начало списка
						Операции ПРОСМОТРЕТЬ и УДАЛИТЬ должны выполнить поиск в списке [A[h(k)]], а это 
						займет время пропорционально длине списка.
						Для достижения постоянного времени поиска списки корзин должны быть как можно меньше.

						Так или иначе, время зависит от хорошей хэш-функции и размера корзины.
						Хэш функция отвечает за равномерное распределение ключей, а значит и снижает размер корзины,
						При этом стоит помнить, что в корзине действует связный список, которая более медленный,
						если раздуть его до больших размеров, то скорость снизится.

				Разрешение коллизий - Открытая адресация

						1) ВСТАВИТЬ: сохранить объект k в первой свободной позиции зондажной последовательности
						2) ПРОСМОТРЕТЬ: просмотреть по ключу k всю зонд. последовательность, пока не найдем элемент.

						Зондажная последовательность - каждый ключ k связывается не с 1 позицией, а с несколькими 
						позициями из зондажной последовательностью позиций.
						При этом, конечно, размер |S| НЕ ДОЛЖЕН ПРЕВЫШАТЬ размер n хэш-таблицы, наче просто 
						данные не поместятся.

						Линейное зондирование: 
								Использует 1 хэш-функцию h, определяя последовательность зондир. для k как :
										h(k), h(k)+1, ... , h(k)+n
						Двойное хэширование: 
								Используются 2 функции:
										1) ПЕРВАЯ - сообщаяет 1ю позицию зондажной послед
										2) ВТОРАЯ - указывает шаг для последующих позиций
								Пример:
										h1(k) = 17, h2(k) = 23
										Тогда позиции: 17, 40, 63, 86 и т.д

						ПОЧЕМУ И КАК ОТКРЫТАЯ АДРЕСАЦИЯ БОРЕТЯ с коллизией:
								К примеру, на обычной хэш-таблице ключ Алиса отображается на 2,
								тогда, когда мы добавим Боба, то он тоже будет отображаться на 2,
								в этом случае мы применяем Открытая адресацию:
										1) Вычисляем другой хэш-функцией h2(Боб) число, пусть - 4
										2.1) Вычисляем новую позицию для боба: 2+4=6, провереряем - занято
										2.2) Вычисляем новую позицию для боба: 2+4+4=10, провереряем - не занято
										3) Ставим Боба на позицию 10
								Пусть еще и Иван отобразился на 2:
										1) Вычисляем другой хэш-функцией h2(Иван) число, пусть - 22
										2) Вычисляем новую позицию для боба: 2+22=24, провереряем - не занято
										3) Ставим Ивана на позицию 24


		ЧТО ЛУЧШЕ для разрешния коллизии - СЦЕПЛЕНИЯ или ОТКРЫТАЯ АДРЕСАЦИЯ?
				
				По ситуации:
						1) Сцепление занимает больше места, чем отрытая адресация (для хран. указателей в связных.списках)
						2) Удаление выполняется хуже при откртой адресации, поэтому тут лучше к обратиться к сцеплению
							2.1) Линейное зондирование приводит к большему числу зондирований, но зато последовательность
									 дружественна иерархии памяти

"""