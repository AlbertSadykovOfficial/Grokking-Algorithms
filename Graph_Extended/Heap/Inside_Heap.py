"""

		Детали реализации КУЧИ

			Кучи в виде деревьев и массивов.
			Кучи в виде деревьев хорошо подходят для визуализации процессов.
			Кучи в виде массивов используются для реализации.

			Куча в виде дерева:
				
				Свойство обекта кучи:
				Для каждого объекта x, его ключ меньше или РАВЕН ключам его потомков.

				Дерево №1
											4
										/		\
									4				8
								/		\			|	\
							9				4	 12	 9
						/		\
					11		13

			Кучи в виде массива:

				Первый эл-т массива - КОРЕНЬ дерева кучи.
				Следующие 2 элемента - следующему уровню дерева 
				и.тд
				
				Массив по дереву №1:
				[4, 4,8, 9,4,12,9, 11,13]

				т.е Потомки объекта i будут в позициях 2i и 2i+1


			ОПЕРАЦИЯ "ВСТАВИТЬ"

				Суть:
					1) Поддерживать дерево полным
					2) Подавлять нарушения кучи

				Пример:
											4
										/		\
									4				8
								/		\			|	\
							9				4	 12	 9
						/		\
					11		13
					
					1) Добавим 2 жлемета: 7 и 10, тогда все будет хорошо:

												4
											/		\
										4				8
									/		\			|	\
								9				4	 12	 9
							/		\			|\
						11		13	 (7 10)

					2) Добавим элемент (5), свойство кучи нарушилось, 5<12, а стоит сейчас ниже
												4
											/		\
										4				8
									/		\			|	\
								9				4	 12	 9
							/		\			|\  \
						11		13	(7 10) 5

					3) Надо передвинуть 5 так высоко, чтобы куча стала нормальной (Подавим нарушение):
						 (Поднимем 5 на 2 позиции вверх-> Называется: Bubble-Up (всплытие вверх))
												4
											/		\
										4				5
									/		\			|	\
								9				4	 8	 9
							/		\		/ |		\
						11		13 (7 10)  12

						Отсюда: Допустим, мы вставили элемент с самым маленьким числом в конец кучи, при самом
										худшем случае, чтобы добраться с самого низа наверх дерева требуется пройти
										log2(n) уровней (Полное бинарное дерево),это говорит нам о том, что:
										ВРЕМЯ ВЫПОЛНЕНИЯ ОПЕРАЦИИ "ВСТАВИТЬ" O(log(n))

			ОПЕРАЦИЯ "ИЗВЛЕЧЕНИЕ МИНИМУМА"

				ОПЕРАЦИЯ, конечно, извлечет минимум без проблем, так как это вершина дерева,
				но вот потом нужно восстановить "сломанное" бинарное дерево.

				Суть:
					Если наверху кучи оказался не самый минимальный элемент (X), 
					то надо его спустить вниз.
					Для этого меняем местами элемент (X) с самым МИНИМАЛЬНЫМ потомоком из 2х!
					Повторяем, пока не достигнем нижней точки.

					ПОЧЕМУ мы меняем элемент (X) с самым МИНИМАЛЬНЫМ?
						
						Исходный граф:
											13
										/		\
									4				8	

						Потому что, если мы поеняемся с максимальным, то куча будет нарушена,
						так как мы поместили бОльший элемент выше меньшего (8 > 4).
											8
			Нарушение ->	/		\
									4				13
						Если мы поеняемся с МИНИМАЛЬНЫМ, то куча будет правильной:
											4
										/		\
									13		 8							
					
				Полный Пример:
				
													4
												/		\
											4				8
										/		\			|	\
									9				4	 12	 9
								/		\
							11		13

													13
												/		\
											4				8
										/		\			|	\
									9				4	 12	 9
								/	
							11

													4
												/		\
											13			8
										/		\			|	\
									9				4	 12	 9
								/
							11

													4
												/		\
											4				8
										/		\			|	\
									9			13	 12	 9
								/
							11
"""